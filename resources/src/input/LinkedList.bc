/**
 * Print message
 **/
function void echo(var any message) {
    ># echo $1
}

class LinkedList {
    var Node head;
    var Node tail;
    var int size;

    constructor LinkedList() {
        // Do nothing ..
    }

    /**
     * Add a new node to the linked list
     **/
    function void add(var int data) {

        // Create node
        var Node newNode;
        newNode = new Node(data);

        // Check if element is the first one to be inserted
        if(size == 0) { 
            head = newNode;
        } else {
            tail.next = newNode;
        }

        // Update the tail
        tail = newNode;

        // Increment the size
        size = size + 1;
    }

    /**
     * Get the size of the linked list
     **/
    function int size() {
        return this.size;
    }

    /**
     * Remove the last element in the linked list
     **/
    function void remove() {
        if(size > 0) {
            tail = tail.previous;
            tail.next = null;
        } else {
            head = null;
            tail = null;
        }
    }

    /**
     * Get data at index
     **/
    function int get(var int index) {
        var Node tmp;
        tmp = head;
        while(index > 0) {
            tmp = tmp.next;
            index = index-1;
        }
        return tmp.data;
    }
}

class Node {
    var int data;
    var Node next;
    var Node previous;

    /**
     * Construct a new node
     **/
    constructor Node(var int data) {
        this.data = data;
    }

    /**
     * Get node data
     **/
    function int getData() {
        return this.data;
    }

    /**
     * Set node data
     **/
    function void setDat(var int data) {
        this.data = data;
    }
}


function int main() {
    var LinkedList list;
    list = new LinkedList();

    // Add elements
    var int i;
    while(i < 10) {
        list.add(i);
        i = i+1;
    }

    // Print elements
    i = list.size()-1;
    while(i >= 0) {
        echo(list.get(i));
        i = i-1;
    }
    
    return 0;
}
