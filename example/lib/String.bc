/**
 * BashClass Library
 * Author: Amir Bawab
 */
class String extends Object {
    var char[] data;
    constructor String(var char[] data) {
        super_constructor();
        this.data = data;
    }

    function int length() {
        ># declare -n _l_array_="_array_${_object_[${_this_},_c_String_v_data]}"
        return >% echo ${#_l_array_[@]}%<;
    }

    function char charAt(var int index) {
        if(index < 0 || index >= length()) {
            exception("Cannot access index out of bound");
        }
        return data[index];
    }

    function String substr(var int fromIndex, var int len) {
        if(fromIndex < 0) {
            exception("Substring cannot start from a negative index");
        }

        if(len < 0) {
            exception("Substring length cannot be negative");
        }

        if(fromIndex + len > length()) {
            exception("Substring index out of bound");
        }

        var char[] subArray = new char[];
        var int i;
        var int si=0;
        for(i=fromIndex; i < fromIndex + len; i=i+1) {
            subArray[si] = data[i];
            si = si + 1;
        }
        return new String(subArray);
    }

    function String append(var String str) {
        var char[] newArray = new char[];
        var int i;
        var int ni=0;
        for(i=0; i < length(); i=i+1) {
            newArray[ni] = charAt(i);
            ni = ni+1;
        }
        for(i=0; i < str.length(); i=i+1) {
            newArray[ni] = str.charAt(i);
            ni = ni+1;
        }
        return new String(newArray);
    }

    function boolean equals(var String str) {
        if(length() != str.length()) {
            return false;
        }

        var int i=0;
        while(i < length()) {
            if(charAt(i) != str.charAt(i)) {
                return false;
            }
            i=i+1;
        }
        return true;
    }
}
